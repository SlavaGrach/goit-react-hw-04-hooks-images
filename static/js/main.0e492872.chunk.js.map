{"version":3,"sources":["components/Searchbar/SearchBar.styled.js","components/Searchbar/SearchBar.jsx","services/api.js","components/ImageGalleryItem/ImageGalleryItem.styled.js","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.js","components/ImageGallery/ImageGallery.jsx","components/Button/Button.styled.js","components/Button/Button.jsx","components/Loader/Container.styled.js","components/Loader/Spinner.jsx","components/Modal/Modal.styled.js","components/Modal/Modal.jsx","App.jsx","index.js"],"names":["HeaderBar","SearchForm","SearchBar","onSubmit","e","preventDefault","value","target","elements","imageName","trim","type","name","autoComplete","autoFocus","placeholder","axios","defaults","baseURL","Api","query","page","params","get","data","hits","Item","ImageGalleryItem","src","alt","largeImageURL","onSelect","onClick","List","ImageGallery","images","map","image","id","webformatURL","tags","Btn","Button","Container","Spinner","color","height","width","timeout","Overlay","Contaier","Modal","closeModal","App","state","reqStatus","selectedImage","hendleFormSubmit","resetState","setState","handleSelectImage","imageURL","handleCloseModal","nodeName","handlerPressKey","key","handleLoadMoreClick","modalIsOpen","_","prevState","a","this","getImages","length","Error","status","toast","warning","window","scrollTo","top","document","documentElement","scrollHeight","behavior","addEventListener","className","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.0e492872.chunk.js","sourcesContent":["import styled from \"@emotion/styled/macro\";\n\nexport const HeaderBar = styled.header`\n  top: 0;\n  left: 0;\n  position: sticky;\n  z-index: 1100;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-height: 64px;\n  padding-right: 24px;\n  padding-left: 24px;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  color: #fff;\n  background-color: #3f51b5;\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\n`;\n\nexport const SearchForm = styled.form`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  max-width: 600px;\n  background-color: #fff;\n  border-radius: 3px;\n  overflow: hidden;\n\n  & button {\n    display: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 0;\n    background-image: url(\"https://image.flaticon.com/icons/svg/149/149852.svg\");\n    background-size: 40%;\n    background-repeat: no-repeat;\n    background-position: center;\n    opacity: 0.6;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n    cursor: pointer;\n    outline: none;\n  }\n\n  & button:hover {\n    opacity: 1;\n  }\n  & span {\n    position: absolute;\n    width: 1px;\n    height: 1px;\n    padding: 0;\n    overflow: hidden;\n    clip: rect(0, 0, 0, 0);\n    white-space: nowrap;\n    clip-path: inset(50%);\n    border: 0;\n  }\n\n  & input {\n    display: inline-block;\n    width: 100%;\n    font: inherit;\n    font-size: 20px;\n    border: none;\n    outline: none;\n    padding-left: 4px;\n    padding-right: 4px;\n  }\n  &input::placeholder {\n    font: inherit;\n    font-size: 18px;\n  }\n`;\n","import React from \"react\";\n\nimport PropTypes from \"prop-types\";\nimport { HeaderBar, SearchForm } from \"./SearchBar.styled\";\n\nconst SearchBar = ({ onSubmit }) => {\n  return (\n    <>\n      <HeaderBar>\n        <SearchForm\n          // не используем контролируемый компонент чтобы небыло лишних рендеров\n          onSubmit={(e) => {\n            e.preventDefault();\n            const value = e.target.elements.imageName.value.trim();\n            if (!value) {\n              return;\n            }\n            onSubmit(value);\n            // console.log(e.target.elements.imageName.value);\n          }}\n        >\n          <button type=\"submit\">\n            <span>Search</span>\n          </button>\n\n          <input\n            type=\"text\"\n            name=\"imageName\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n          />\n        </SearchForm>\n      </HeaderBar>\n    </>\n  );\n};\n\nSearchBar.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nexport default SearchBar;\n","import axios from \"axios\";\n\naxios.defaults.baseURL = \"https://pixabay.com/api/\";\n\nexport class Api {\n  static async getImages(query, page) {\n    const API_KEY = \"6482848-443bdcc87ab7c743d3374b0c5\";\n    const params = `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n    const { data } = await axios.get(params);\n    return data.hits;\n  }\n}\n\nexport const getImages = async (query, page) => {\n  const API_KEY = \"6482848-443bdcc87ab7c743d3374b0c5\";\n\n  const params = `?q=${query}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`;\n  const { data } = await axios.get(params);\n  console.log(data.hits);\n  return data.hits;\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Item = styled.li`\n  border-radius: 2px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n\n  & img {\n    width: 100%;\n    height: 260px;\n    object-fit: cover;\n    transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n  & img:hover {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Item } from \"./ImageGalleryItem.styled\";\n\nconst ImageGalleryItem = ({ src, alt, largeImageURL, onSelect }) => {\n  return (\n    <Item\n      onClick={() => {\n        onSelect(largeImageURL);\n      }}\n    >\n      <img src={src} alt={alt} />\n    </Item>\n  );\n};\n\nImageGalleryItem.propTypes = {\n  id: PropTypes.number,\n  src: PropTypes.string,\n  alt: PropTypes.string,\n};\n\nexport default ImageGalleryItem;\n\n/*\nid - уникальный идентификатор\nwebformatURL - ссылка на маленькое изображение для списка карточек\nlargeImageURL - ссылка на большое изображение для модального окна\n*/\n","import styled from \"@emotion/styled/macro\";\n\nexport const List = styled.ul`\n  display: grid;\n  max-width: calc(100vw - 48px);\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\n  grid-gap: 16px;\n  margin-top: 0;\n  margin-bottom: 0;\n  padding: 0;\n  list-style: none;\n  margin-left: auto;\n  margin-right: auto;\n`;\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport ImageGalleryItem from \"../ImageGalleryItem/ImageGalleryItem\";\nimport { List } from \"./ImageGallery.styled\";\n\nconst ImageGallery = ({ images, onSelect }) => {\n  return (\n    <div>\n      <List>\n        {images.map((image) => {\n          const { id, webformatURL, tags, largeImageURL } = image;\n          return (\n            <ImageGalleryItem\n              onSelect={onSelect}\n              key={id}\n              src={webformatURL}\n              alt={tags}\n              largeImageURL={largeImageURL}\n            />\n          );\n        })}\n      </List>\n    </div>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array,\n};\n\nexport default ImageGallery;\n","import styled from \"@emotion/styled/macro\";\n\nexport const Btn = styled.button`\n  padding: 8px 16px;\n  border-radius: 2px;\n  background-color: #3f51b5;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  text-align: center;\n  display: inline-block;\n  color: #fff;\n  border: 0;\n  text-decoration: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: 18px;\n  line-height: 24px;\n  font-style: normal;\n  font-weight: 500;\n  min-width: 180px;\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\n  &:hover,\n  &:focus {\n    background-color: #303f9f;\n  }\n`;\n","import React from \"react\";\nimport { Btn } from \"./Button.styled\";\n\nexport const Button = ({ onClick }) => {\n  return (\n    <>\n      <Btn onClick={onClick}>Load more</Btn>\n    </>\n  );\n};\n","import styled from \"@emotion/styled/macro\";\n\nexport const Container = styled.div`\n  display: block;\n  margin: 0 auto;\n  align-items: center;\n  padding-top: 150px;\n`;\n","import Loader from \"react-loader-spinner\";\n// import \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\n\nimport React from \"react\";\nimport { Container } from \"./Container.styled\";\n\nexport const Spinner = () => {\n  return (\n    <>\n      <Container>\n        <Loader\n          type=\"Oval\"\n          color=\"#3f51b5\"\n          height={100}\n          width={100}\n          timeout={2000}\n        />\n      </Container>\n    </>\n  );\n};\n","import styled from \"@emotion/styled/macro\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\nexport const Contaier = styled.div`\r\n  //Modal\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n","import React from \"react\";\nimport { Contaier, Overlay } from \"./Modal.styled\";\n\nconst Modal = ({ src, closeModal }) => {\n  return (\n    <Overlay onClick={closeModal}>\n      <Contaier>\n        <img src={src} alt=\"\" />\n      </Contaier>\n    </Overlay>\n  );\n};\n\nexport default Modal;\n","import \"./App.css\";\nimport React, { Component } from \"react\";\n\nimport { ToastContainer, toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport SearchBar from \"./components/Searchbar/SearchBar\";\nimport { Api } from \"./services/api\";\nimport ImageGallery from \"./components/ImageGallery/ImageGallery\";\nimport { Button } from \"./components/Button/Button\";\nimport { Spinner } from \"./components/Loader/Spinner\";\nimport Modal from \"./components/Modal/Modal\";\n\nexport default class App extends Component {\n  state = {\n    imageName: null,\n    images: [],\n    page: 1,\n    reqStatus: \"idle\", // idle, pending, resolved, rejected\n    selectedImage: null,\n  };\n\n  async componentDidUpdate(_, prevState) {\n    //асиннхронный вызов\n    const { imageName, page, selectedImage } = this.state;\n    if (prevState.imageName !== imageName || prevState.page !== page) {\n      try {\n        this.setState({ reqStatus: \"pending\" });\n        const images = await Api.getImages(imageName, page);\n        if (!images.length) {\n          throw new Error();\n        }\n        const reqStatus = \"resolved\";\n        this.setState((prevState) => ({\n          images: [...prevState.images, ...images],\n          reqStatus: reqStatus,\n        }));\n      } catch (error) {\n        this.setState({\n          status: \"rejected\",\n        });\n        toast.warning(`Not Found any images by query: ${imageName}`);\n      }\n      page > 1 && // если больше одной страницы, то скролим\n        window.scrollTo({\n          top: document.documentElement.scrollHeight,\n          behavior: \"smooth\",\n        });\n    }\n    selectedImage && window.addEventListener(\"keydown\", this.handlerPressKey);\n  }\n\n  // получаем имя изображения из формы и записываем в state\n  hendleFormSubmit = (imageName) => {\n    this.resetState(); //очистка состояния перед запросом\n    this.setState({ imageName });\n  };\n\n  // действие при выборе изображения в галерее, в стате передаем ссылку на большое изображение\n  handleSelectImage = (imageURL) => {\n    this.setState({ selectedImage: imageURL });\n  };\n\n  handleCloseModal = (e) => {\n    if (e.target.nodeName === \"IMG\") {\n      return;\n    }\n    this.setState({ selectedImage: null });\n  };\n\n  handlerPressKey = (e) => {\n    if (e.key === \"Escape\") {\n      this.setState({ selectedImage: null });\n    }\n  };\n\n  // действие по нажалию кнопки \"LOAD MORE\" с стайте увеличиваем значение page на 1\n  handleLoadMoreClick = () => {\n    this.setState({ page: this.state.page + 1 });\n  };\n\n  // сброс state перед новым запросом\n  resetState = () => {\n    this.setState({\n      imageName: null,\n      images: [],\n      page: 1,\n      reqStatus: \"idle\",\n      modalIsOpen: false,\n    });\n  };\n\n  render() {\n    const { reqStatus, images, selectedImage } = this.state;\n\n    return (\n      <div className=\"App\">\n        <SearchBar onSubmit={this.hendleFormSubmit} />\n        {reqStatus === \"pending\" && <Spinner />}\n        <ImageGallery\n          images={images}\n          // onClick={this.handleSelectImage}\n          onSelect={this.handleSelectImage}\n        />\n        {selectedImage && (\n          <Modal closeModal={this.handleCloseModal} src={selectedImage} />\n        )}\n        {images.length > 0 && <Button onClick={this.handleLoadMoreClick} />}\n        <ToastContainer />\n      </div>\n    );\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}